# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# MISC. SETTERS
# Set mod key ($mod_next=<Alt>, Mod4=<Super>)
set $mod Mod1
set $mod_next Mod4
set $border_no_name border pixel 3
set $border_normal border normal 3

# set i3-input font
set $i3inputfont \\"-*-*-*-*-*-*-24-*-*-*-*-*-*-*\\"  

# Theme options (comment/uncomment theme group)
## Theme 1 "paradise pink"
#set $accent-bg #d64161
#set $accent-txt #F9FAF9
#set $indicator #109648

# Theme 2 "tmux"
#set $accent-bg #4e9a06
#set $accent-txt #F9FAF9
#set $indicator #d64161

# Theme 3 "french lilac"
#set $accent-bg #8f5f95
#set $accent-txt #F9FAF9
#set $indicator #109648

# Theme 4 "cardinal"
#set $accent-bg #ba263f
#set $accent-txt #F9FAF9
#set $indicator #109648

# Theme 5 "illuminating emerald"
#set $accent-bg #00916e
#set $accent-txt #F9FAF9
#set $indicator #109648

# Theme 6 "light gray"
set $accent-bg #D3D3D3
set $accent-txt #363636
set $indicator #109648

# set other colors
set $inactive-bg #3A4141
set $inactive-txt #bdbbbb
set $unfocused-bg #566161
set $unfocused-txt #bdbbbb

# class                  border       backgr.    text        indic.     child_border
client.focused           $accent-bg $accent-bg $accent-txt $indicator $accent-bg
client.focused_inactive  $inactive-bg $inactive-bg $inactive-txt $indicator $inactive-bg
client.unfocused         $unfocused-bg $unfocused-bg $unfocused-txt $indicator $unfocused-bg
#client.urgent           #CB4B16 #FDF6E3 #CB4B16 $indicator
#client.placeholder      #000000 #0c0c0c $accent-txt #000000
#client.background       #2B2C2B

# set default desktop layout (default is tiling) <default|stacking|tabbed>
workspace_layout tabbed reverse

# set default window title_align
title_align center

# Configure border style <normal|1pixel|pixel xx|none|pixel>
for_window [class=".*"] $border_normal
for_window [class=".*"] title_window_icon on
for_window [class=".*"] title_window_icon padding 3px

# focus_wrapping <yes|no|force|workspace>
# Legacy syntax: "force_focus_wrapping force"
focus_wrapping no

# Hide borders <none|vertical|horizontal|both|smart>
hide_edge_borders none

# set popup behaviour during full screen <smart|ignore|leave_fullscreen>
popup_during_fullscreen leave_fullscreen

# change borders
bindsym $mod+$mod_next+b $border_normal
bindsym $mod+Shift+b $border_no_name
bindsym $mod+Ctrl+b border none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:DejaVu Sans 10

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# Autostart applications
exec --no-startup-id xsetroot -solid "#6a6868"
exec_always --no-startup-id i3wsr --config ~/.config/i3/i3wsr.toml
exec_always --no-startup-id vmware-user-suid-wrapper

# picom (compositor)
bindsym $mod+t exec --no-startup-id $picom_start
bindsym $mod+ctrl+t exec --no-startup-id "killall picom"

# kill focused window
bindsym $mod+Shift+q kill

# instant layout
# REQUIRES XDOTOOL
set $centre_mouse WINDOW=$(xdotool getactivewindow); eval `xdotool getwindowgeometry --shell $WINDOW`; W=`expr $WIDTH / 2`; H=`expr $HEIGHT / 2`; xdotool mousemove --window $WINDOW $W $H
bindsym $mod+Escape exec --no-startup-id "$centre_mouse; i3-instant-layout --list | rofi -show-icons -sort -kb-row-up \\"Alt+k\\" -kb-row-down \\"Alt+j\\" -theme lb -theme-str '* { font: \\"Sans 16\\"; foreground: #ffffff; border-color: $accent-bg; separatorcolor: $accent-bg; selected-normal-background: $accent-bg; }' -dmenu -i | i3-instant-layout -


################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

exec --no-startup-id volumeicon
bindsym $mod+$mod_next+v exec --no-startup-id "killall volumeicon; sleep 1; volumeicon"
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
#bindsym $mod+Ctrl+m exec pavucontrol

################################################################################################

# start dmenu (a program launcher)
bindsym $mod_next+d exec dmenu_run -sb "$accent-bg"
bindsym $mod_next+Return exec dmenu_run "$accent-bg"

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# focus_follows_mouse no

# hjkl focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# wasd focus
bindsym $mod+w focus up
bindsym $mod+a focus left
bindsym $mod+s focus down
bindsym $mod+d focus right

# master-stack keybinding (moves stack window to master and current master back to stack window)
# NOTE: requires 'jq'
#bindsym $mod+period focus parent, focus right, focus child
#bindsym $mod+comma focus parent, focus left, focus child
#set $get_layout $(i3-msg -t get_tree | jq -r 'recurse(.nodes[];.nodes!=null)|select(.nodes[].focused).layout')
#set $count_children $(i3-msg -t get_tree | jq -r 'recurse(.nodes[];.nodes!=null)|select(.nodes[].focused).nodes' | jq length)
#bindsym $mod+Shift+period exec "COUNT=$count_children; if [ \\"$COUNT\\" -gt 1 ]; then MST=$get_layout; i3-msg layout stacked, focus right; STK=$get_layout; i3-msg layout stacked, focus left, move right, layout $STK, focus parent, focus left, layout $MST; fi"
#bindsym $mod+Shift+comma exec "COUNT=$count_children; if [ \\"$COUNT\\" -gt 1 ]; then STK=$get_layout; i3-msg layout stacked, focus left; MST=$get_layout; i3-msg layout stacked, focus right, move left, layout $MST, focus parent, focus right, layout $STK; fi"
#bindsym $mod_next+Shift+period exec "COUNT=$count_children; if [ \\"$COUNT\\" -gt 1 ]; then MST=$get_layout; i3-msg layout stacked, focus right; STK=$get_layout; i3-msg layout stacked, focus left, move right, focus up, layout $STK, focus parent, focus left, layout $MST; fi"
#bindsym $mod_next+Shift+comma exec "COUNT=$count_children; if [ \\"$COUNT\\" -gt 1 ]; then STK=$get_layout; i3-msg layout stacked, focus left; MST=$get_layout; i3-msg layout stacked, focus right, move left, focus up, layout $MST, focus parent, focus right, layout $STK; fi"

# container focusing (with fallback for case where window is direct child of workspace container)
# NOTE: requires xdotool
#bindsym $mod+comma exec "WINDOW=$(xdotool getactivewindow); i3-msg \\"focus parent; focus left; focus child\\"; NEW_WINDOW=$(xdotool getactivewindow); if [ \\"$NEW_WINDOW\\" -eq \\"$WINDOW\\" ]; then i3-msg \\"focus left\\"; fi"
#bindsym $mod+period exec "WINDOW=$(xdotool getactivewindow); i3-msg \\"focus parent; focus right; focus child\\"; NEW_WINDOW=$(xdotool getactivewindow); if [ \\"$NEW_WINDOW\\" -eq \\"$WINDOW\\" ]; then i3-msg \\"focus right\\"; fi"

# convenience move
bindsym $mod+z move left
bindsym $mod+x move right

# move focused window
bindsym $mod+Shift+Left move left 100px
bindsym $mod+Shift+Down move down 100px
bindsym $mod+Shift+Up move up 100px
bindsym $mod+Shift+Right move right 100px

# hjkl move
bindsym $mod+Shift+h move left 100px
bindsym $mod+Shift+j move down 100px
bindsym $mod+Shift+k move up 100px
bindsym $mod+Shift+l move right 100px

# wasd move
bindsym $mod+Shift+w move up 100px
bindsym $mod+Shift+a move left 100px
bindsym $mod+Shift+s move down 100px
bindsym $mod+Shift+d move right 100px

# mark and focus
bindsym $mod+Ctrl+1 mark --add --toggle 1
bindsym $mod+Ctrl+2 mark --add --toggle 2
bindsym $mod+Ctrl+3 mark --add --toggle 3
bindsym $mod+Ctrl+4 mark --add --toggle 4
bindsym $mod+Ctrl+5 mark --add --toggle 5
bindsym $mod+Ctrl+6 mark --add --toggle 6
bindsym $mod+Ctrl+7 mark --add --toggle 7
bindsym $mod+Ctrl+8 mark --add --toggle 8
bindsym $mod+Ctrl+9 mark --add --toggle 9
bindsym $mod+g exec "i3-input -f $i3inputfont -l 1 -P \\"Goto Mark: \\" -F '[con_mark=\\"%s\\"] focus'"

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes

# renaming container
set $namechildcon "i3-msg focus parent; i3-input -f \\"-*-*-*-*-*-*-24-*-*-*-*-*-*-*\\" -P \\"Name child container: \\" -F 'title_format \\"<span><b>%s</b>%title</span>\\"'; i3-msg focus child"
bindsym $mod+slash exec $namechildcon
# sets back to default i3 container title
bindsym $mod+$mod_next+slash focus parent; title_format " %title"; focus child

# container layouts
bindsym $mod_next+w layout tabbed reverse
bindsym $mod_next+q layout splith reverse
bindsym $mod_next+e layout splitv reverse
bindsym $mod_next+s layout stacking reverse
bindsym $mod_next+Shift+w layout tabbed, layout fill_order default
bindsym $mod_next+Shift+q layout splith, layout fill_order default
bindsym $mod_next+Shift+e layout splitv, layout fill_order default
bindsym $mod_next+Shift+s layout stacking, layout fill_order default

# child container layout bindsyms (creates a child container from currently select window)
bindsym $mod+c split h; layout tabbed reverse

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+shift+f exec "i3-msg focus parent, fullscreen toggle, focus child"

# toggle tiling / floating focus
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+space focus mode_toggle

# toggle sticky
bindsym $mod+Ctrl+v sticky toggle;exec notify-send 'sticky windows toggled'

# focus last window
# requires (https://crates.io/crates/i3-focus-last)
bindsym $mod+Tab exec i3-focus-last

# window transparency adjustment (and alias to restart picom)
bindsym $mod+$mod_next+z exec transset-df -a --min 0.20 --dec 0.20
bindsym $mod+$mod_next+Shift+z exec transset-df -a --min 0.1 --dec 0.1
bindsym $mod+$mod_next+Ctrl+z exec "WINDOWS=$(xdotool search --all --onlyvisible --desktop $(xprop -notype -root _NET_CURRENT_DESKTOP | cut -c 24-) \\"\\" 2>/dev/null); for window in $WINDOWS; do xdotool windowactivate $window; transset-df -a --min 0.20 --dec 0.20; done"
bindsym $mod+$mod_next+x exec transset-df -a --inc 0.20 --max 0.99
bindsym $mod+$mod_next+Shift+x exec transset-df -a --inc 0.1 --max 0.99
bindsym $mod+$mod_next+Ctrl+x exec "WINDOWS=$(xdotool search --all --onlyvisible --desktop $(xprop -notype -root _NET_CURRENT_DESKTOP | cut -c 24-) \\"\\" 2>/dev/null); for window in $WINDOWS; do xdotool windowactivate $window; transset-df -a --inc 0.20 --max 0.99; done"

# window dimming enable or disable (uses xdotool and xprop to set a anti-dim flag, which picom recognises in focus-exclude array)
bindsym $mod+ctrl+a exec xprop -id $(xdotool getactivewindow) -f ANTIDIM_FLAG 8c -set ANTIDIM_FLAG 1; exec notify-send 'anti-dim set on window'
bindsym $mod+ctrl+Shift+a exec xprop -id $(xdotool getactivewindow) -remove ANTIDIM_FLAG; exec notify-send 'dim set on window'

# window colour inversion (uses xdotool and xprop to set an invert flag, which picom recognises in invert-color-include array)
bindsym $mod+ctrl+i exec xprop -id $(xdotool getactivewindow) -f INVERT_FLAG 8c -set INVERT_FLAG 1; exec notify-send 'invert set on window'
bindsym $mod+ctrl+Shift+i exec xprop -id $(xdotool getactivewindow) -remove INVERT_FLAG; exec notify-send 'invert removed on window'

# focus the parent container
bindsym $mod+q focus parent
bindsym $mod+e focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+Tab move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# navigate workspaces next / previous
bindsym $mod+Ctrl+h workspace prev
bindsym $mod+Ctrl+l workspace next

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $wsg number 0:`
set $ws1 number 1:1
set $ws2 number 2:2
set $ws3 number 3:3
set $ws4 number 4:4
set $ws5 number 5:5
set $ws6 number 6:6
set $ws7 number 7:7
set $ws8 number 8:8
exec --no-startup-id workspace 1

# switch to workspace
bindsym $mod+Ctrl+grave workspace $wsg
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+grave move container to workspace $wsg
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8

# Move focused container to workspace, and switch to that workspace
bindsym $mod+$mod_next+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+$mod_next+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+$mod_next+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+$mod_next+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+$mod_next+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+$mod_next+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+$mod_next+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+$mod_next+8 move container to workspace $ws8; workspace $ws8

# move all windows on workspace cache to current container
bindsym $mod+$mod_next+grave [workspace="`"] move container to workspace current

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
# assign [class="Pale moon"] $ws2
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5

# Open specific applications in floating mode

# Application shortcuts
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# shortcuts to often used applications
bindsym $mod_next+u exec --no-startup-id gnome-software
bindsym $mod_next+i exec --no-startup-id firefox
bindsym $mod_next+o exec --no-startup-id xfce4-appfinder
bindsym $mod_next+p exec --no-startup-id putty
bindsym $mod_next+bracketleft exec --no-startup-id thunar

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Ctrl+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Ctrl+r restart

bindsym $mod_next+l exec i3exit lock

# exit i3 (logs you out of your X session)
bindsym $mod+0 exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# arrow key resizing without resize mode
bindsym $mod+$mod_next+Left resize shrink width 50 px or 5 ppt
bindsym $mod+$mod_next+Down resize grow height 50 px or 5 ppt
bindsym $mod+$mod_next+Up resize shrink height 50 px or 5 ppt
bindsym $mod+$mod_next+Right resize grow width 50 px or 5 ppt
bindsym $mod+$mod_next+Shift+Left resize shrink width 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+Down resize grow height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+Up resize shrink height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+Right resize grow width 100 px or 10 ppt

# hkjl resize
bindsym $mod+$mod_next+h resize shrink width 50 px or 5 ppt
bindsym $mod+$mod_next+j resize grow height 50 px or 5 ppt
bindsym $mod+$mod_next+k resize shrink height 50 px or 5 ppt
bindsym $mod+$mod_next+l resize grow width 50 px or 5 ppt
bindsym $mod+$mod_next+Shift+h resize shrink width 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+j resize grow height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+k resize shrink height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+l resize grow width 100 px or 10 ppt

# predefined sizes (70/30)
bindsym $mod+$mod_next+u resize set width 40 ppt
bindsym $mod+$mod_next+i resize set width 50 ppt
bindsym $mod+$mod_next+o resize set width 60 ppt

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
    i3bar_command i3bar
    status_command i3status
    position bottom

## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#   tray_output primary
#   tray_output eDP1

    bindsym button4 nop bindsym button5 nop
#   font xft:URWGothic-Book 11
    strip_workspace_numbers yes

    colors {
        background #4a4a4a
        statusline #F9FAF9
        separator  #454947

#                      border  backgr. text
        focused_workspace  $accent-txt $accent-bg $accent-txt
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace #595B5B #283339 #EEE8D5
        binding_mode       $accent-bg #2C2C2C #F9FAF9
        urgent_workspace   $accent-bg #FDF6E3 #E5201D
    }
}

# hide/unhide i3status bar
bindsym $mod+Control+m bar mode toggle
