# i3 config file (v4)
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# MISC. SETTERS
# Set mod key ($mod_next=<Alt>, Mod4=<Super>)
set $mod Mod1
set $mod_next Mod4
set $border_no_name border pixel 3
set $border_normal border normal 3

# set i3-input font
set $i3inputfont \\"-*-*-*-*-*-*-24-*-*-*-*-*-*-*\\"  

# Theme options (comment/uncomment theme group)
# Theme 1 "Paradise Pink"
#set $accent-bg #d64161
#set $accent-txt #F9FAF9
#set $indicator #109648

# Theme 2 "tmux"
#set $accent-bg #4e9a06
#set $accent-txt #F9FAF9
#set $indicator #d64161

# Theme 3 "plurple"
set $accent-bg #8f5f95
set $accent-txt #F9FAF9
set $indicator #109648

# set other colors
set $inactive-bg #323838
set $inactive-txt #F9FAF9
set $unfocused-bg #566161
set $unfocused-txt #bdbbbb

# class                   border  backgr. text    indic.   child_border
client.focused          $accent-bg $accent-bg $accent-txt $indicator $accent-bg
client.focused_inactive $inactive-bg $inactive-bg $inactive-txt $indicator $inactive-bg
client.unfocused        $unfocused-bg $unfocused-bg $unfocused-txt $indicator $unfocused-bg
#client.urgent           #CB4B16 #FDF6E3 #CB4B16 $indicator
#client.placeholder      #000000 #0c0c0c $accent-txt #000000
#client.background       #2B2C2B

# set default desktop layout (default is tiling) <default|stacking|tabbed>
workspace_layout tabbed

# set default window title_align
title_align center

# Configure border style <normal|1pixel|pixel xx|none|pixel>
for_window [class=".*"] $border_normal

# focus_wrapping <yes|no|force|workspace>
# Legacy syntax: "force_focus_wrapping force"
focus_wrapping no

# Hide borders <none|vertical|horizontal|both|smart>
hide_edge_borders none

# set popup behaviour during full screen <smart|ignore|leave_fullscreen>
popup_during_fullscreen leave_fullscreen

# change borders
bindsym $mod+$mod_next+bracketleft $border_no_name
bindsym $mod+$mod_next+bracketright border none
bindsym $mod+$mod_next+backslash $border_normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font xft:BitstreamVeraSans-Roman 10

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# Autostart applications
#exec --no-startup-id alttab -pk h -nk l -fg "#d58681" -bg "#4a4a4a" -frame "#eb564d" -t 128x150 -i 127x64
exec --no-startup-id "pkill -9 redshift; redshift -P -t 5000:4000"
exec --no-startup-id "xkbset exp =m; xkbset m"
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id copyq
exec --no-startup-id fcitx -d
exec --no-startup-id nitrogen --restore
exec --no-startup-id nm-applet
exec --no-startup-id polychromatic-tray-applet
exec --no-startup-id xautolock -time 10 -locker blurlock
set $picom_start "pkill picom; sleep 1; picom -b"
exec_always --no-startup-id $picom_start
exec_always --no-startup-id /usr/lib/xfce4/notifyd/xfce4-notifyd
exec_always --no-startup-id "pkill conky; sleep 0.5; conky -c ~/.config/conky; conky -c ~/.config/conky_shortcuts"
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id fix_xcursor
exec_always --no-startup-id i3-focus-last server
exec_always --no-startup-id i3wsr --config ~/.i3/i3wsr.toml
exec_always --no-startup-id optimus-manager-qt
exec_always --no-startup-id xfce4-power-manager

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
#bindsym $mod+d exec --no-startup-id dmenu_recency
bindsym $mod_next+d exec --no-startup-id "rofi -show-icons -modi windowcd,window,drun -show drun"
bindsym $mod_next+Return exec --no-startup-id "rofi -show-icons -modi windowcd,window,drun -show drun"
bindsym $mod_next+Tab exec --no-startup-id "rofi -show-icons -modi windowcd,window,drun -show window"


################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

exec --no-startup-id volumeicon
#bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
#bindsym $mod+Ctrl+m exec pavucontrol

################################################################################################

# Increase/decrease sink volume 1
bindsym $mod+F1 exec amixer -qD pulse set Master toggle; exec notify-send 'sound toggled'
bindsym $mod+F2 exec amixer -qc 0 set Master 2db-; exec notify-send 'volume decreased'
bindsym $mod+F3 exec amixer -qc 0 set Master 2db+; exec notify-send 'volume increased'

# Screen brightness controls
#bindsym $mod+F8 exec sudo xbacklight -10
bindsym $mod+F8 exec "sleep 1; xset dpms force off"
bindsym $mod+F9 exec sudo xbacklight +10

# focus_follows_mouse no

# hjkl focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# master-stack keybinding (moves stack window to master and current master back to stack window)
# NOTE: requires 'jq'
#set $get_layout $(i3-msg -t get_tree | jq -r 'recurse(.nodes[];.nodes!=null)|select(.nodes[].focused).layout')
#bindsym $mod+Shift+comma exec "STK=$get_layout; i3-msg layout stacked, move left, focus parent, focus right, layout $STK, focus parent, focus left"
#bindsym $mod+Shift+period exec "MST=$get_layout; i3-msg layout stacked, move right, focus parent, focus left, layout $MST, focus parent, focus right"

# container focusing (with fallback for case where window is direct child of workspace container)
# NOTE: requires xdotool
bindsym $mod+comma exec "WINDOW=$(xdotool getactivewindow); i3-msg \\"focus parent; focus left; focus child\\"; NEW_WINDOW=$(xdotool getactivewindow); if [ \\"$NEW_WINDOW\\" -eq \\"$WINDOW\\" ]; then i3-msg \\"focus left\\"; fi"
bindsym $mod+period exec "WINDOW=$(xdotool getactivewindow); i3-msg \\"focus parent; focus right; focus child\\"; NEW_WINDOW=$(xdotool getactivewindow); if [ \\"$NEW_WINDOW\\" -eq \\"$WINDOW\\" ]; then i3-msg \\"focus right\\"; fi"

# move focused window
bindsym $mod+Shift+Left move left 100px
bindsym $mod+Shift+Down move down 100px
bindsym $mod+Shift+Up move up 100px
bindsym $mod+Shift+Right move right 100px

# hjkl move
bindsym $mod+Shift+h move left 100px
bindsym $mod+Shift+j move down 100px
bindsym $mod+Shift+k move up 100px
bindsym $mod+Shift+l move right 100px

# mark and focus
bindsym $mod+Ctrl+1 mark --add --toggle 1
bindsym $mod+Ctrl+2 mark --add --toggle 2
bindsym $mod+Ctrl+3 mark --add --toggle 3
bindsym $mod+Ctrl+4 mark --add --toggle 4
bindsym $mod+Ctrl+5 mark --add --toggle 5
bindsym $mod+Ctrl+6 mark --add --toggle 6
bindsym $mod+Ctrl+7 mark --add --toggle 7
bindsym $mod+Ctrl+8 mark --add --toggle 8
bindsym $mod+Ctrl+9 mark --add --toggle 9
bindsym $mod+g exec "i3-input -f $i3inputfont -l 1 -P \\"Goto Mark: \\" -F '[con_mark=\\"%s\\"] focus'"

# mark and move
bindsym $mod+m mark --add --toggle m
bindsym $mod+Ctrl+m unmark m
bindsym $mod+Shift+m [workspace="`"] move container to workspace current

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes

# renaming container
bindsym $mod+slash exec "i3-input -f $i3inputfont -P \\"Change Title: \\" -F 'title_format \\"<span><b><tt>%s:</tt></b>%title</span>\\"'"
# sets back to default i3 container title
bindsym $mod+$mod_next+slash title_format " %title"

# container layouts
bindsym $mod+w layout tabbed
bindsym $mod+q layout splith
bindsym $mod+e layout splitv
bindsym $mod+s layout stacking

# child container layout bindsyms (creates a child container from currently select window)
bindsym $mod+$mod_next+q split h
bindsym $mod+$mod_next+e split v
bindsym $mod+$mod_next+w split h; layout tabbed
bindsym $mod+$mod_next+s split h; layout stacked

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+shift+f exec "i3-msg focus parent, fullscreen toggle, focus child"

# toggle tiling / floating focus
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+space focus mode_toggle

# toggle sticky
bindsym $mod+Ctrl+s sticky toggle;exec notify-send 'sticky windows toggled'

# focus last window
# requires (https://crates.io/crates/i3-focus-last)
bindsym $mod+Tab exec i3-focus-last

# window transparency adjustment (and alias to restart picom)
bindsym $mod+$mod_next+z exec transset-df -a --min 0.20 --dec 0.20
bindsym $mod+$mod_next+Shift+z exec transset-df -a --min 0.1 --dec 0.1
bindsym $mod+$mod_next+Ctrl+z exec "WINDOWS=$(xdotool search --all --onlyvisible --desktop $(xprop -notype -root _NET_CURRENT_DESKTOP | cut -c 24-) \\"\\" 2>/dev/null); for window in $WINDOWS; do xdotool windowactivate $window; transset-df -a --min 0.20 --dec 0.20; done"
bindsym $mod+$mod_next+x exec transset-df -a --inc 0.20 --max 0.99
bindsym $mod+$mod_next+Shift+x exec transset-df -a --inc 0.1 --max 0.99
bindsym $mod+$mod_next+Ctrl+x exec "WINDOWS=$(xdotool search --all --onlyvisible --desktop $(xprop -notype -root _NET_CURRENT_DESKTOP | cut -c 24-) \\"\\" 2>/dev/null); for window in $WINDOWS; do xdotool windowactivate $window; transset-df -a --inc 0.20 --max 0.99; done"
bindsym $mod+$mod_next+c exec --no-startup-id $picom_start

# window dimming enable or disable (uses xdotool and xprop to set a anti-dim flag, which picom recognises in focus-exclude array)
bindsym $mod+$mod_next+a exec xprop -id $(xdotool getactivewindow) -f ANTIDIM_FLAG 8c -set ANTIDIM_FLAG 1; exec notify-send 'anti-dim set on window'
bindsym $mod+$mod_next+Shift+a exec xprop -id $(xdotool getactivewindow) -remove ANTIDIM_FLAG; exec notify-send 'dim set on window'

# window colour inversion (uses xdotool and xprop to set an invert flag, which picom recognises in invert-color-include array)
bindsym $mod+$mod_next+d exec xprop -id $(xdotool getactivewindow) -f INVERT_FLAG 8c -set INVERT_FLAG 1; exec notify-send 'invert set on window'
bindsym $mod+$mod_next+Shift+d exec xprop -id $(xdotool getactivewindow) -remove INVERT_FLAG; exec notify-send 'invert removed on window'

# focus the parent container
bindsym $mod+a focus parent
bindsym $mod+z focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+Tab move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 number 1:1
set $ws2 number 2:2
set $ws3 number 3:3
set $ws4 number 4:4
set $ws5 number 5:5
set $ws6 number 6:6
set $ws7 number 7:7
set $ws8 number 8:8
set $wsx number 0:`

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+grave workspace $wsx

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+grave move container to workspace $wsx

# Move focused container to workspace, and switch to that workspace
bindsym $mod+$mod_next+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+$mod_next+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+$mod_next+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+$mod_next+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+$mod_next+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+$mod_next+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+$mod_next+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+$mod_next+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+$mod_next+grave move container to workspace $wsx; workspace $wsx

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
# assign [class="Pale moon"] $ws2
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5

# Open specific applications in floating mode
for_window [class="(?i)Gcolor3"] floating enable border pixel 1
for_window [class="(?i)Gnome-calculator"] floating enable
for_window [class="(?i)Kupfer"] border none
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="(?i)arandr"] floating enable
for_window [class="Calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="Lightdm-gtk-greeter-settings"] floating enable
for_window [class="Manjaro-hello"] floating enable
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Shutter"] floating disable
for_window [class="Simple-scan"] floating enable border normal
for_window [class="Thus"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="Xfburn"] floating enable
for_window [class="copyq"] floating enable border pixel 1
for_window [class="octopi"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="spectacle"] floating disable
for_window [title="File Transfer*"] floating enable
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="(?i)^timeshift-gtk$"] floating disable
for_window [class="(?i)^gnome-calculator$"] floating disable
for_window [class="(?i)^workspacesclient$"] floating disable

# Application shortcuts
bindsym $mod+Return exec i3-sensible-terminal
bindsym Print exec --no-startup-id i3-scrot
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# shortcuts to often used applications
bindsym $mod_next+u exec --no-startup-id pamac-manager
bindsym $mod_next+i exec --no-startup-id brave
bindsym $mod_next+o exec --no-startup-id xfce4-appfinder
bindsym $mod_next+p exec --no-startup-id putty
bindsym $mod_next+bracketleft exec --no-startup-id nautilus

#sm-player shortcuts (e.g. for use if send smplayer to scratchpad)
bindsym $mod_next+Shift+space exec --no-startup-id smplayer -send-action pause
bindsym $mod_next+Shift+h exec --no-startup-id smplayer -send-action rewind1
bindsym $mod_next+Shift+l exec --no-startup-id smplayer -send-action forward1

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Ctrl+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Ctrl+r restart

bindsym $mod_next+l exec i3exit lock

# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (Shift+s)uspend, (s)uspend+lock, (h)ibernate, (Shift+h)ibernate+lock, (r)eboot, shut(d)own
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym Shift+s exec --no-startup-id "systemctl suspend", mode "default"
    bindsym s exec --no-startup-id "i3exit lock; systemctl suspend", mode "default"
    bindsym u exec --no-startup-id "i3exit switch_user", mode "default"
    bindsym e exec --no-startup-id "i3exit logout", mode "default"
    bindsym h exec --no-startup-id "systemctl hibernate", mode "default"
    bindsym Shift+h exec --no-startup-id "i3exit lock; systemctl hibernate", mode "default"
    bindsym r exec --no-startup-id "i3exit reboot", mode "default"
    bindsym d exec --no-startup-id "i3exit shutdown", mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Lock screen
bindsym $mod+Home exec --no-startup-id i3exit lock, mode "default"
bindsym $mod+F12 exec --no-startup-id i3exit suspend, mode "default"

## Resize window (you can also use the mouse for that)
#bindsym $mod+r mode "resize"
#mode "resize" {
        ## These bindings trigger as soon as you enter the resize mode
        ## Pressing left will shrink the window’s width.
        ## Pressing right will grow the window’s width.
        ## Pressing up will shrink the window’s height.
        ## Pressing down will grow the window’s height.
        #bindsym l resize shrink width 5 px or 5 ppt
        #bindsym j resize grow height 5 px or 5 ppt
        #bindsym k resize shrink height 5 px or 5 ppt
        #bindsym semicolon resize grow width 5 px or 5 ppt

        ## same bindings, but for the arrow keys
        #bindsym Left resize shrink width 10 px or 10 ppt
        #bindsym Down resize grow height 10 px or 10 ppt
        #bindsym Up resize shrink height 10 px or 10 ppt
        #bindsym Right resize grow width 10 px or 10 ppt

        ## exit resize mode: Enter or Escape
        #bindsym Return mode "default"
        #bindsym Escape mode "default"
#}

# arrow key resizing without resize mode
bindsym $mod+$mod_next+Left resize shrink width 50 px or 5 ppt
bindsym $mod+$mod_next+Down resize grow height 50 px or 5 ppt
bindsym $mod+$mod_next+Up resize shrink height 50 px or 5 ppt
bindsym $mod+$mod_next+Right resize grow width 50 px or 5 ppt
bindsym $mod+$mod_next+Shift+Left resize shrink width 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+Down resize grow height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+Up resize shrink height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+Right resize grow width 100 px or 10 ppt

# hkjl resize
bindsym $mod+$mod_next+h resize shrink width 50 px or 5 ppt
bindsym $mod+$mod_next+j resize grow height 50 px or 5 ppt
bindsym $mod+$mod_next+k resize shrink height 50 px or 5 ppt
bindsym $mod+$mod_next+l resize grow width 50 px or 5 ppt
bindsym $mod+$mod_next+Shift+h resize shrink width 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+j resize grow height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+k resize shrink height 100 px or 10 ppt
bindsym $mod+$mod_next+Shift+l resize grow width 100 px or 10 ppt

# predefined sizes (70/30)
bindsym $mod+$mod_next+u resize set width 40 ppt
bindsym $mod+$mod_next+i resize set width 50 ppt
bindsym $mod+$mod_next+o resize set width 60 ppt

# "netflix" and "spotify" modes
bindsym $mod+$mod_next+n floating enable;sticky enable; move position 1300px 708px resize set 612 343;border none
bindsym $mod+$mod_next+m floating enable;sticky enable; move position 1123px 983px resize set 791 70;border none
bindsym $mod+$mod_next+Shift+m resize set height 64; border none

# redshift modes
bindsym $mod_next+r mode "$mode_redshift"
set $mode_redshift Set colour temperature: (a)uto, (r)eset, (2)500K, (3)000K, (4)000K, (5)000K
set $kill_redshift pkill -9 redshift;
mode "$mode_redshift" {
    bindsym a exec --no-startup-id "$kill_redshift redshift -P -t 5000:4000", mode "default"
    bindsym r exec --no-startup-id "$kill_redshift redshift -x", mode "default"
    bindsym 2 exec --no-startup-id "$kill_redshift redshift -P -O 2500", mode "default"
    bindsym 3 exec --no-startup-id "$kill_redshift redshift -P -O 3000", mode "default"
    bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 4000", mode "default"
    bindsym 5 exec --no-startup-id "$kill_redshift redshift -P -O 5000", mode "default"

    # exit mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
    i3bar_command i3bar
    status_command py3status -c ~/.i3status.conf
    position bottom

## please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#   tray_output primary
#   tray_output eDP1

    bindsym button4 nop bindsym button5 nop
#   font xft:URWGothic-Book 11
    strip_workspace_numbers yes

    colors {
        background #4a4a4a
        statusline #F9FAF9
        separator  #454947

#                      border  backgr. text
        focused_workspace  $accent-txt $accent-bg $accent-txt
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace #595B5B #283339 #EEE8D5
        binding_mode       $accent-bg #2C2C2C #F9FAF9
        urgent_workspace   $accent-bg #FDF6E3 #E5201D
    }
}

# hide/unhide i3status bar
bindsym $mod+Control+b bar mode toggle

#############################
### settings for i3-gaps: ###
#############################

## Set inner/outer gaps
#gaps inner 6
#gaps outer -6
#
## Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
## gaps inner|outer current|all set|plus|minus <px>
## gaps inner all set 10
## gaps outer all plus 5
#
## Smart gaps (gaps used if only more than one container on the workspace)
##smart_gaps on
#
## Smart borders (draw borders around container only if it is not the only container on this workspace)
## on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on
#
## Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
#set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
#bindsym $mod+Shift+g mode "$mode_gaps"
#
#mode "$mode_gaps" {
#        bindsym o      mode "$mode_gaps_outer"
#        bindsym i      mode "$mode_gaps_inner"
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_inner" {
#        bindsym plus  gaps inner current plus 5
#        bindsym minus gaps inner current minus 5
#        bindsym 0     gaps inner current set 0
#
#        bindsym Shift+plus  gaps inner all plus 5
#        bindsym Shift+minus gaps inner all minus 5
#        bindsym Shift+0     gaps inner all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
#mode "$mode_gaps_outer" {
#        bindsym plus  gaps outer current plus 5
#        bindsym minus gaps outer current minus 5
#        bindsym 0     gaps outer current set 0
#
#        bindsym Shift+plus  gaps outer all plus 5
#        bindsym Shift+minus gaps outer all minus 5
#        bindsym Shift+0     gaps outer all set 0
#
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#}
